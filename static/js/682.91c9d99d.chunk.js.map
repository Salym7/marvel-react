{"version":3,"file":"static/js/682.91c9d99d.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelService.js","hooks/http.hook.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case \"waiting\":\n            return <Spinner />;\n        case \"loading\":\n            return newItemLoading ? <Component /> : <Spinner />;\n        case \"confirmed\":\n            return <Component />;\n        case \"error\":\n            return <ErrorMessage />;\n        default:\n            throw new Error(\"Unexpected process state\");\n    }\n};\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess(\"confirmed\"));\n    };\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    };\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            );\n        });\n\n        return <ul className=\"comics__grid\">{items}</ul>;\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                disabled={newItemLoading}\n                style={{ display: comicsEnded ? \"none\" : \"block\" }}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (<>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess } = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=5d66691ac3e256fab6c3e76f173abda0\";\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(\r\n            `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    };\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n            `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description\r\n                ? `${char.description.slice(0, 210)}...`\r\n                : \"There is no description for this character\",\r\n            thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items,\r\n        };\r\n    };\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount\r\n                ? `${comics.pageCount} p.`\r\n                : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            // optional chaining operator\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : \"not available\",\r\n        };\r\n    };\r\n\r\n    return {\r\n        clearError,\r\n        process,\r\n        setProcess,\r\n        getAllCharacters,\r\n        getCharacterByName,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n    };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n               throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setProcess('loading'), []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}"],"names":["className","src","avengers","alt","avengersLogo","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","i","to","id","thumbnail","title","price","renderItems","disabled","onClick","Helmet","name","content","AppBanner","request","useCallback","url","method","body","headers","fetch","response","ok","status","json","data","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharacter","getCharacterByName","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices"],"sourceRoot":""}